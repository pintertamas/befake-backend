version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - befake-network
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: wurstmeister/kafka
    links:
      - zookeeper:zk
    ports:
      - '9092:9092'
    networks:
      - befake-network
    environment:
      #KAFKA_ADVERTISED_HOST_NAME: localhost
      #HOSTNAME_COMMAND: "ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{ print $$1}'"
      #BROKER_ID_COMMAND: "hostname | awk -F'-' '{print $$2}'"
      HOSTNAME_COMMAND: "route -n | awk '/UG[ \t]/{print $$2}'"
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_CREATE_TOPICS: "befake:2:3,registration:2:3,post:2:3,comment:2:3,reaction:2:3,friend:2:3"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    restart: always

  api-gateway:
    image: api-gateway:latest
    ports:
      - "8765:8765"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - rabbitmq
    environment:
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411
      RABBIT_URI: amqp://guest@rabbitmq:5672
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_ZIPKIN_SENDER_TYPE: rabbit

  zipkin-server:
    image: openzipkin/zipkin:2.23
    ports:
      - "9411:9411"
    networks:
      - befake-network
    depends_on:
      - rabbitmq
    environment:
      RABBIT_URI: amqp://guest:guest@rabbitmq:5672
    restart: always #Restart if there is a problem starting up

  rabbitmq:
    image: rabbitmq:3.8.34-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - befake-network

  auth-service:
    image: authorization-service:latest
    restart: always
    ports:
      - "8080:8080"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - api-gateway
      - user-service
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411

  friend-service:
    image: friend-service:latest
    restart: always
    ports:
      - "8003:8003"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - api-gateway
      - kafka
    environment:
      EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411
      #SPRING.DATASOURCE.URL: jdbc:postgresql://mouse.db.elephantsql.com:5432/uussjasr?user=uussjasr&password=tacFU7jL_jE2zYxNVzNgkMeAUSKzLi4R&sslmode=require
      SPRING.DATASOURCE.URL: jdbc:postgresql://host.docker.internal:5432/friend-service
      SPRING.DATASOURCE.USERNAME: postgres
      SPRING.DATASOURCE.PASSWORD: postgres
      KAFKA.URL: kafka:9092

  interaction-service:
    image: interaction-service:latest
    restart: always
    ports:
      - "8002:8002"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - api-gateway
      - kafka
    environment:
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411
      SPRING.DATASOURCE.URL: jdbc:postgresql://host.docker.internal:5432/interaction-service
      SPRING.DATASOURCE.USERNAME: postgres
      SPRING.DATASOURCE.PASSWORD: postgres
      KAFKA.URL: kafka:9092

  notification-service:
    image: notification-service:latest
    restart: always
    ports:
      - "8101:8101"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - api-gateway
      - kafka
    environment:
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411
      KAFKA.URL: kafka:9092

  post-service:
    image: post-service:latest
    restart: always
    ports:
      - "8001:8001"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - api-gateway
      - kafka
    environment:
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411
      SPRING.DATASOURCE.URL: jdbc:postgresql://host.docker.internal:5432/post-service
      SPRING.DATASOURCE.USERNAME: postgres
      SPRING.DATASOURCE.PASSWORD: postgres
      KAFKA.URL: kafka:9092

  time-service:
    image: time-service:latest
    restart: always
    ports:
      - "8081:8081"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - api-gateway
      - kafka
    environment:
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411
      KAFKA.URL: kafka:9092

  user-service:
    image: user-service:latest
    restart: always
    ports:
      - "8000:8000"
    networks:
      - befake-network
    depends_on:
      - naming-server
      - api-gateway
      - kafka
    environment:
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411
      SPRING.DATASOURCE.URL: jdbc:postgresql://host.docker.internal:5432/user-service
      SPRING.DATASOURCE.USERNAME: postgres
      SPRING.DATASOURCE.PASSWORD: postgres
      KAFKA.URL: kafka:9092

networks:
  befake-network: